[project]
name = "ebd-toolchain"
description = "Combines the features of ebdamame and rebdhuhn to automatically generate SVGs from EBD.docx files"
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.11"
authors = [{ name = "Hochfrequenz Unternehmensberatung GmbH", email = "info+github@hochfrequenz.de" }]
keywords = ["EBD", "rebdhuhn", "ebdamame", "scraping", "python-docx", "kroki", "entscheidungsbaumdiagramm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "ebdamame>=0.5.1",
    "rebdhuhn>=0.17.2-rc1",
    "cattrs",
    "click",
    "pydantic-settings"
    # add all the dependencies here
]
dynamic = ["readme", "version"]

[project.optional-dependencies]
coverage = ["coverage==7.8.2"]
formatting = ["black==25.1.0", "isort==6.0.1"]
linting = ["pylint==3.3.7"]
spellcheck = ["codespell==2.4.1"]
test_packaging = ["build==1.2.2.post1", "twine==6.1.0"]
tests = ["pytest==8.3.5"]
type_check = ["mypy==1.15.0"]

[project.urls]
Changelog = "https://github.com/Hochfrequenz/ebd_toolchain/releases"
Homepage = "https://github.com/Hochfrequenz/ebd_toolchain"

[tool.black]
line-length = 120
target_version = ["py311", "py312", "py313"]

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120

[mypy]
truethy-bool = true

[tool.mypy]
disable_error_code = []

[project.scripts]
scrape_and_plot = "ebd_toolchain.main:main"
# `package.model:func` syntax:
# 1. `ebd_toolchain` is the package in the src directory
# 2. `.main` means the main.py module inside the ebd_toolchain package
# 3. `:main` means the main(...) function inside the main.py module

[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [{ path = "README.md" }]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/_ebd_toolchain_version.py"
template = '''
version = "{version}"
'''

[tool.hatch.build.targets.sdist]
exclude = ["/unittests"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]
